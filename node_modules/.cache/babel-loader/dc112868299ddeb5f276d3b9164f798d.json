{"ast":null,"code":"import _classCallCheck from \"/Users/connorvanderhook/projects/frameworks/reactulator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/connorvanderhook/projects/frameworks/reactulator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/connorvanderhook/projects/frameworks/reactulator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/connorvanderhook/projects/frameworks/reactulator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/connorvanderhook/projects/frameworks/reactulator/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/connorvanderhook/projects/frameworks/reactulator/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/connorvanderhook/projects/frameworks/reactulator/src/Grid.js\";\nimport React, { Component } from 'react';\nimport Screen from './Screen';\nvar gridValues = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \".\"];\nvar operators = [\"+\", \"-\", \"/\", \"*\", \"=\", \".\", \"%\", \"C\", \"<\"];\n\nvar GridButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GridButton, _Component);\n\n  function GridButton(props) {\n    var _this;\n\n    _classCallCheck(this, GridButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GridButton).call(this, props));\n    _this.state = {\n      currentSolution: 0\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(GridButton, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState(function (state, props) {\n        return {\n          currentSolution: props.value\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"button\", {\n        className: \"gridButton\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, this.props.value);\n    }\n  }]);\n\n  return GridButton;\n}(Component);\n\nvar Grid =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Grid, _Component2);\n\n  function Grid() {\n    _classCallCheck(this, Grid);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Grid).apply(this, arguments));\n  }\n\n  _createClass(Grid, [{\n    key: \"render\",\n    value: function render() {\n      var gridButtons = gridValues.map(function (btn) {\n        return React.createElement(GridButton, {\n          key: btn.toString(),\n          value: btn,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Screen, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, gridButtons));\n    }\n  }]);\n\n  return Grid;\n}(Component);\n\nexport default Grid;","map":{"version":3,"sources":["/Users/connorvanderhook/projects/frameworks/reactulator/src/Grid.js"],"names":["React","Component","Screen","gridValues","operators","GridButton","props","state","currentSolution","handleClick","bind","setState","value","Grid","gridButtons","map","btn","toString"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAMC,UAAU,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,CAAnB;AACA,IAAMC,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,CAAlB;;IAEMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAAb;AAEA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AAJe;AAKlB;;;;kCAEa;AACV,WAAKC,QAAL,CAAc,UAACJ,KAAD,EAAQD,KAAR;AAAA,eAAmB;AAC7BE,UAAAA,eAAe,EAAEF,KAAK,CAACM;AADM,SAAnB;AAAA,OAAd;AAGH;;;6BAEQ;AACL,aACI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAE,KAAKH,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKH,KAAL,CAAWM,KADhB,CADJ;AAKH;;;;EApBoBX,S;;IAuBnBY,I;;;;;;;;;;;;;6BACO;AACL,UAAMC,WAAW,GAAGX,UAAU,CAACY,GAAX,CAAe,UAACC,GAAD;AAAA,eAE/B,oBAAC,UAAD;AAAY,UAAA,GAAG,EAAEA,GAAG,CAACC,QAAJ,EAAjB;AACY,UAAA,KAAK,EAAED,GADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAF+B;AAAA,OAAf,CAApB;AAMA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,WADL,CAHJ,CADJ;AASH;;;;EAjBcb,S;;AAoBnB,eAAeY,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport Screen from './Screen';\n\nconst gridValues = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \".\"];\nconst operators = [\"+\", \"-\", \"/\", \"*\", \"=\", \".\", \"%\", \"C\", \"<\"];\n\nclass GridButton extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {currentSolution: 0}\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.setState((state, props) => ({\n            currentSolution: props.value\n        }));\n    }\n\n    render() {\n        return (\n            <button className=\"gridButton\" onClick={this.handleClick}>\n                {this.props.value}\n            </button>\n        )\n    }\n}\n\nclass Grid extends Component {\n    render() {\n        const gridButtons = gridValues.map((btn) =>\n            \n            <GridButton key={btn.toString()}\n                        value={btn} />\n        );\n\n        return (\n            <div>\n                <Screen/>\n                <br/>\n                <ul>\n                    {gridButtons}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}